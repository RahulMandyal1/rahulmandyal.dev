{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  ComputedFields,\n  defineDocumentType,\n  makeSource,\n} from \"contentlayer/source-files\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypePrettyCode, {\n  CharsElement,\n  LineElement,\n} from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport readingTime from \"reading-time\";\n\nconst computedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, \"\"),\n  },\n  readingTime: {\n    type: \"json\",\n    resolve: (doc) => {\n      return readingTime(doc.body.raw);\n    },\n  },\n};\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    publishedAt: {\n      type: \"string\",\n      required: true,\n    },\n    summary: {\n      type: \"string\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n    },\n    draft: {\n      type: \"boolean\",\n      default: false,\n    },\n  },\n  computedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"src/content/\",\n  documentTypes: [Blog],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypePrettyCode,\n        {\n          theme: \"one-dark-pro\",\n          keepBackground: false,\n\n          onVisitHighlightedLine(node: LineElement) {\n            if (\n              node.properties.className &&\n              node.properties.className.length > 0\n            ) {\n              node.properties.className.push(\"line--highlighted\");\n            } else {\n              node.properties.className = [\"line--highlighted\"];\n            }\n          },\n          onVisitHighlightedChars(node: CharsElement) {\n            node.properties.className = [\"word--highlighted\"];\n          },\n        },\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"anchor\"],\n          },\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,OAAO,eAAe;AACtB,OAAO,sBAGA;AACP,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,iBAAiB;AAExB,IAAM,iBAAiC;AAAA,EACrC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,EACjE;AAAA,EACA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ;AAChB,aAAO,YAAY,IAAI,KAAK,GAAG;AAAA,IACjC;AAAA,EACF;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,gBAAgB;AAAA,UAEhB,uBAAuB,MAAmB;AACxC,gBACE,KAAK,WAAW,aAChB,KAAK,WAAW,UAAU,SAAS,GACnC;AACA,mBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,YACpD,OAAO;AACL,mBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,YAClD;AAAA,UACF;AAAA,UACA,wBAAwB,MAAoB;AAC1C,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
